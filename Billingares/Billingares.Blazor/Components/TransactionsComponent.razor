@using Billingares.Blazor.ViewModels
@using Ujeby.Blazor.Base.Components

@inherits ComponentBase<TransactionsViewModel, ApplicationState, ApplicationSettings>;

@if (ViewModel.Transactions.Any())
{
	<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
		<MudTabPanel Text="Table" Icon="@Icons.Material.Filled.TableView">
			<MudTable Items="@ViewModel.Transactions" Loading="@IsBusy"
					  Hover="true" Dense="false" ReadOnly="true" FixedHeader="false" Striped="true">
@*				
				<ToolBarContent>
					<MudText Typo="Typo.h6">Transactions (@ViewModel.Transactions.Length)</MudText>
				</ToolBarContent>
*@
				<HeaderContent>
					<MudTh>@nameof(Transaction.From)</MudTh>
					<MudTh>@nameof(Transaction.To)</MudTh>
					<MudTh Style="text-align:right;">@nameof(Transaction.Amount)</MudTh>
				</HeaderContent>
				<RowTemplate>
					<MudTd DataLabel="@nameof(context.From)">@context.From</MudTd>
					<MudTd DataLabel="@nameof(context.To)">@context.To</MudTd>
					<MudTd DataLabel="@nameof(context.Amount)" Style="text-align:right;">@Transaction.FormatCurrency(context.Amount)</MudTd>
				</RowTemplate>
			</MudTable>
		</MudTabPanel>
		<MudTabPanel Text="Matrix" Icon="@Icons.Material.Filled.Apps">
			<MudSimpleTable Dense="false" Hover="false" Bordered="true" Striped="true" Style="overflow-x: auto;">
				<tbody>
					<tr>
						<td style="background-color:var(--mud-palette-primary-lighten)">&nbsp;</td>
						@foreach (var user in ViewModel.Transactions.ListUniqueUsersOrdered())
						{
							<td><strong>@user</strong></td>
						}
					</tr>
					@foreach (var user in ViewModel.Transactions.ListUniqueUsersOrdered())
					{
						<tr>
							<td><strong>@user</strong></td>
							@foreach (var amount in ViewModel.MatrixRow(user))
							{
								if (amount == decimal.MinValue)
								{
									<td style="background-color:var(--mud-palette-primary-lighten)"></td>
								}
								else
								{
									<td style="text-align:right;">@(amount.HasValue ? Transaction.FormatCurrency(amount.Value) : "")</td>
								}
							}
						</tr>
					}
				</tbody>
			</MudSimpleTable>
		</MudTabPanel>
		<MudTabPanel Text="Balance" Icon="@Icons.Material.Filled.AccountBalance">
			<MudTable Items="@ViewModel.Balance()" Loading="@IsBusy"
					  Hover="true" Dense="false" ReadOnly="true" FixedHeader="false" Striped="true">
@*			
					<ToolBarContent>
					<MudText Typo="Typo.h6">Users (@ViewModel.Balance().Count())</MudText>
					</ToolBarContent>
*@	
				<HeaderContent>
					<MudTh>@nameof(Balance.Name)</MudTh>
					<MudTh Style="text-align:right;">Balance</MudTh>
					<MudTh Style="text-align:right;">In</MudTh>
					<MudTh Style="text-align:right;">Out</MudTh>
				</HeaderContent>
				<RowTemplate>
					<MudTd DataLabel="@nameof(context.Name)">@context.Name</MudTd>
					<MudTd DataLabel="@nameof(context.Amount)" Style="text-align:right;">@Transaction.FormatCurrency(context.Amount)</MudTd>
					<MudTd DataLabel="@nameof(context.AmountIn)" Style="text-align:right;">@Transaction.FormatCurrency(context.AmountIn)</MudTd>
					<MudTd DataLabel="@nameof(context.AmountOut)" Style="text-align:right;">@Transaction.FormatCurrency(context.AmountOut)</MudTd>
				</RowTemplate>
			</MudTable>
		</MudTabPanel>
	</MudTabs>
}